pipeline {
    agent any // Runs on any available Jenkins agent

    tools {
        maven 'Maven' // Assumes a Maven installation named 'Maven' in Jenkins global config
        jdk 'JDK'     // Assumes a JDK installation named 'JDK' in Jenkins global config
    }

    stages {
        stage('Checkout') {
            steps {
                // Clone the repository
                git url: 'https://github.com/rahulcse1/DataStructure.git', branch: 'master'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'mvn clean install -DskipTests' // Install dependencies without running tests yet
            }
        }

        stage('Build') {
            steps {
                sh 'mvn package' // Builds the Spring Boot JAR/WAR
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test' // Runs unit/integration tests
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml' // Publishes test results
                }
            }
        }

        stage('Deploy') {
            when {
                branch 'master' // Only deploy from main branch
            }
            steps {
                sh '''
                    echo "Deploying Spring Boot application..."
                    # Example: Copy JAR to a server or run it
                    # java -jar target/*.jar
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
            archiveArtifacts artifacts: 'target/*.jar', allowEmptyArchive: true // Archive the built JAR
        }
        failure {
            echo 'Pipeline failed. Check the logs for details.'
        }
        always {
            cleanWs() // Clean workspace after the build
        }
    }
}